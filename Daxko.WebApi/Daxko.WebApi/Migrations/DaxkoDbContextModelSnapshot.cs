// <auto-generated />
using System;
using Daxko.WebApi.Data.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Daxko.WebApi.Migrations
{
    [DbContext(typeof(DaxkoDbContext))]
    partial class DaxkoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Daxko.WebApi.Data.Entity.Model.CreditCard", b =>
                {
                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpirationMonth")
                        .HasColumnType("int");

                    b.Property<int>("ExpirationYear")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DonationId");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("Daxko.WebApi.Data.Entity.Model.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Daxko.WebApi.Data.Entity.Model.GiftConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("MaxDonation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinDonation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GiftConfigurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxDonation = 49.99m,
                            MinDonation = 25.00m,
                            Name = "Sticker"
                        },
                        new
                        {
                            Id = 2,
                            MaxDonation = 99.99m,
                            MinDonation = 50m,
                            Name = "T-Shirt"
                        },
                        new
                        {
                            Id = 3,
                            MaxDonation = 100000000.00m,
                            MinDonation = 100.00m,
                            Name = "Coffee mug"
                        },
                        new
                        {
                            Id = 4,
                            MinDonation = 100000000.00m,
                            Name = "Sign"
                        });
                });

            modelBuilder.Entity("Daxko.WebApi.Data.Entity.Model.CreditCard", b =>
                {
                    b.HasOne("Daxko.WebApi.Data.Entity.Model.Donation", "Donation")
                        .WithOne("CreditCard")
                        .HasForeignKey("Daxko.WebApi.Data.Entity.Model.CreditCard", "DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donation");
                });

            modelBuilder.Entity("Daxko.WebApi.Data.Entity.Model.Donation", b =>
                {
                    b.Navigation("CreditCard")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
